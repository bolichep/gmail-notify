Description: theme icons usage
 .
 .
 gmail-notify (1.6.1.1-4) experimental; urgency=medium
 .
   * Add sound and libnotify support
Author: Pedro Boliche <bolichep@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- a/notifier.py
+++ b/notifier.py
@@ -18,7 +18,7 @@
 import re
 
 BKG_PATH="/usr/share/apps/gmail-notify/background.jpg"
-ICON_PATH="/usr/share/apps/gmail-notify/icon.png"
+ICON_PATH="/usr/share/apps/gmail-notify/icon.svg"
 ICON2_PATH="/usr/share/apps/gmail-notify/icon2.png"
 ICON3_PATH="/usr/share/apps/gmail-notify/icon3.png"
 
@@ -101,15 +101,15 @@
 		# Create the notify
 		#noti = pynotify.Notification("")
 
-		self.fixed=gtk.Fixed()
-		self.window.add(self.fixed)
-		self.fixed.show()
-		self.fixed.set_size_request(0,0)
-		# Set popup's background image
-		self.image=gtk.Image()
-		self.image.set_from_file( BKG_PATH )
-		self.image.show()
-		self.fixed.put(self.image,0,0)	
+		#~ self.fixed=gtk.Fixed()
+		#~ self.window.add(self.fixed)
+		#~ self.fixed.show()
+		#~ self.fixed.set_size_request(0,0)
+		#~ # Set popup's background image
+		#~ self.image=gtk.Image()
+		#~ self.image.set_from_file( BKG_PATH )
+		#~ self.image.show()
+		#~ self.fixed.put(self.image,0,0)	
 		# Set popup's label
 		self.label=gtk.Label()
 		self.label.set_line_wrap(1)
@@ -120,32 +120,32 @@
 		self.label.set_markup( self.default_label)
 		# Show popup
 		self.label.show()
-		# Create popup's event box
-		self.event_box = gtk.EventBox()
-		self.event_box.set_visible_window(0)
-		self.event_box.show()
-		self.event_box.add(self.label)
-		self.event_box.set_size_request(180,125)
-		self.event_box.set_events(gtk.gdk.BUTTON_PRESS_MASK)
-		self.event_box.connect("button_press_event", self.event_box_clicked)
-		# Setup popup's event box
-		self.fixed.put(self.event_box,6,25)
-		self.event_box.realize()
-		self.event_box.window.set_cursor(gtk.gdk.Cursor(gtk.gdk.HAND1))
-		# Resize and move popup's event box
-		self.window.resize(180,1)	
-		self.width, self.height = self.window.get_size()
-		self.height+=self.options['voffset']
-		self.width+=self.options['hoffset']
-		self.window.move(gtk.gdk.screen_width() - self.width, gtk.gdk.screen_height() - self.height)
+		#~ # Create popup's event box
+		#~ self.event_box = gtk.EventBox()
+		#~ self.event_box.set_visible_window(0)
+		#~ self.event_box.show()
+		#~ self.event_box.add(self.label)
+		#~ self.event_box.set_size_request(180,125)
+		#~ self.event_box.set_events(gtk.gdk.BUTTON_PRESS_MASK)
+		#~ self.event_box.connect("button_press_event", self.event_box_clicked)
+		#~ # Setup popup's event box
+		#~ self.fixed.put(self.event_box,6,25)
+		#~ self.event_box.realize()
+		#~ self.event_box.window.set_cursor(gtk.gdk.Cursor(gtk.gdk.HAND1))
+		#~ # Resize and move popup's event box
+		#~ self.window.resize(180,1)	
+		#~ self.width, self.height = self.window.get_size()
+		#~ self.height+=self.options['voffset']
+		#~ self.width+=self.options['hoffset']
+		#~ self.window.move(gtk.gdk.screen_width() - self.width, gtk.gdk.screen_height() - self.height) 
+
 		# Create the tray icon object
 		self.tray = gtk.StatusIcon()
 		self.tray.set_title(self.lang.get_string(21))
 		self.tray.connect("button_press_event",self.tray_icon_clicked)
 		# Set the image for the tray icon
-		self.pixbuf = gtk.gdk.pixbuf_new_from_file( ICON_PATH )
-		scaled_buf = self.pixbuf.scale_simple(24,24,gtk.gdk.INTERP_BILINEAR)
-		self.tray.set_from_pixbuf(scaled_buf)
+		#self.pixbuf = gtk.gdk.pixbuf_new_from_file( ICON_PATH )
+		self.set_tray_state()
 
 		self.init=1
 		while gtk.events_pending():
@@ -156,7 +156,26 @@
 			self.mail_check()
 
 		self.maintimer=gtk.timeout_add(self.options['checkinterval'],self.mail_check)
-
+	
+	def set_tray_state(self,state=1,size=24):
+		if state==0:
+			icon_state = "mail-mark-read"
+		if state==1 or state==2:
+			icon_state = "mail-mark-unread"
+		if state==3:
+			icon_state = "mail-mark-important"
+		icon_theme = gtk.icon_theme_get_default()
+		pixbuf = icon_theme.load_icon( icon_state , size, gtk.ICON_LOOKUP_FORCE_SVG)
+		scaled_buf = pixbuf.scale_simple(size,size,gtk.gdk.INTERP_BILINEAR)
+		self.tray.set_from_pixbuf(scaled_buf)
+		if state==2:
+			self.tray.set_blinking(True)
+		else:
+			self.tray.set_blinking(False)	
+		return scaled_buf # pixbuf
+			
+			
+	
 	def sound_handle(self,menuitem):
 		return
 
@@ -185,9 +204,11 @@
 			self.label.set_markup(self.default_label)
 			self.show_popup()
 			self.dont_connect=0
-			self.pixbuf = gtk.gdk.pixbuf_new_from_file( ICON3_PATH )
-			scaled_buf = self.pixbuf.scale_simple(24,24,gtk.gdk.INTERP_BILINEAR)
-			self.tray.set_from_pixbuf(scaled_buf)
+			self.set_tray_state(3)
+			#~ #self.pixbuf = gtk.gdk.pixbuf_new_from_file( ICON3_PATH )
+			#~ self.pixbuf = icon_theme.load_icon("mail-mark-important", 24, gtk.ICON_LOOKUP_FORCE_SVG)			
+			#~ scaled_buf = self.pixbuf.scale_simple(24,24,gtk.gdk.INTERP_BILINEAR)
+			#~ self.tray.set_from_pixbuf(scaled_buf)
 			return 0
 
 	def mail_check(self, event=None):
@@ -237,20 +258,25 @@
 			s = ' ' 
 			if attrs[0]>1: s=self.lang.get_string(35)+" "
 			self.tray.set_tooltip_text((self.lang.get_string(19))%{'u':attrs[0],'s':s})
-			self.pixbuf = gtk.gdk.pixbuf_new_from_file( ICON2_PATH )
+			#~ #self.pixbuf = gtk.gdk.pixbuf_new_from_file( ICON2_PATH )
+			#~ self.pixbuf = icon_theme.load_icon("mail-mark-unread", 24, gtk.ICON_LOOKUP_FORCE_SVG)
+			tray_state = 2
 		else:
 			print "no new messages"
 			#self.default_title="<span size='large' ><i><u>"+self.lang.get_string(21)+"</u></i></span>\n\n\n"
 			self.default_title=self.lang.get_string(21)
 			self.default_label=self.lang.get_string(18)
 			self.tray.set_tooltip_text(self.lang.get_string(18))
-			self.pixbuf = gtk.gdk.pixbuf_new_from_file( ICON_PATH )
+			#~ #self.pixbuf = gtk.gdk.pixbuf_new_from_file( ICON_PATH )			
+			#~ self.pixbuf = icon_theme.load_icon("mail-mark-read", 24, gtk.ICON_LOOKUP_FORCE_SVG)
+			tray_state = 1
 
 		
 		p = re.compile('&')
 		self.label.set_markup(p.sub('&amp;', self.default_label))
-		scaled_buf = self.pixbuf.scale_simple(24,24,gtk.gdk.INTERP_BILINEAR)
-		self.tray.set_from_pixbuf(scaled_buf)
+		#~ scaled_buf = self.pixbuf.scale_simple(24,24,gtk.gdk.INTERP_BILINEAR)
+		#~ self.tray.set_from_pixbuf(scaled_buf)
+		self.set_tray_state(tray_state)
 		self.unreadmsgcount=attrs[0]
 
 		self.mailcheck=0
@@ -266,6 +292,7 @@
 		except:
 			# If an error ocurred, cancel mail check
 			print "getUnreadMsgCount() failed, will try again soon"
+			self.set_tray_state(3)
 			return (-1,)
 
 		sender=''
@@ -297,14 +324,13 @@
 		n.close()
 		return
 
-
-
 	def show_popup(self):
 		if self.popup==1:return
 		# Generate popup
 		print "generating popup"
 		self.noti = pynotify.Notification(self.default_title,re.sub('&','&amp;', self.default_label))
-		self.noti.set_icon_from_pixbuf(self.pixbuf)
+		#~ self.noti.set_icon_from_pixbuf(self.pixbuf)
+		self.noti.set_icon_from_pixbuf(self.set_tray_state(2,48))
 		self.noti.set_category("presence.online")
 		self.noti.add_action("default","Default Action", self.gotourlnotify )
 		#self.noti.add_action("help","Help", help_cb )
